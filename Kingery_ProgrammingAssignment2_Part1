#Trevor Kingery
#Programming Assignment 2, Part 1
#1st output column is the original array, 2nd is the new array with squared integers


.data
	original_array:	.word	1, 2, 3, 4	#initalize the values in the initial array, given from the table in part 1
	new_array:	.space	16		#initalize 16 bytes as storage for the four new integers
	nl:		.asciiz	"\n"		#print a newline, used in displaying the arrays	
.text
	la	$s0, original_array		#load the list of values into $s0
	la	$s1, new_array			#alocate space for 4 integers in $s1

main:
	addi	$t0, $t0, 0			#using t0 as a counter for loop, set equal to 0
	
loop: 
	lw	$t1, ($s0)			#load the value at $s0 into $t1
	mul	$t2, $t1, $t1			#square the value at $t1 into $t2
	sw	$t2, ($s1)			#save the value in $t2 into the address of $s1
	
	addi	$s0, $s0, 4			#Move to the next address at $s0
	addi	$s1, $s1, 4			#Move to the next address at $s1
	
	
	# Print the values in the original array
    	li 	$v0, 1               
   	move 	$a0, $t1
    	syscall
	
	# print a space between integers
    	li 	$v0, 11               
    	la 	$a0, 32
    	syscall
	
	# Print the values in the new array
    	li 	$v0, 1               
   	move 	$a0, $t2
    	syscall

    	# used to print a new line or "\n"
    	li 	$v0, 4               
    	la 	$a0, nl
    	syscall
    	
    	addi 	$t0, $t0, 1        		# Increment counter
    	
    	bne 	$t0, 4, loop        		# loop until all 4 values are squared and saved in $s1
    	
    	
    	
    	
    	
    	